name: Android CI

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - "*.md"
  pull_request:
    branches: [ "master" ]
    types: [ opened, synchronize, reopened ]

jobs:
  build:

    name: Build SuperLyric - ${{ github.event_name }}

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-overwrite-existing: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload Release Apk
        uses: actions/upload-artifact@v4
        with:
          name: SuperLyric_release
          path: ./app/build/outputs/apk/release

      - name: Upload Debug Apk
        uses: actions/upload-artifact@v4
        with:
          name: SuperLyric_debug
          path: ./app/build/outputs/apk/debug

      - name: Find Apks
        run: |
          echo "APK_RELEASE_PATH=$(find app/build/outputs/apk/release/ -name '*.apk')" >> $GITHUB_ENV
          echo "APK_DEBUG_PATH=$(find app/build/outputs/apk/debug/ -name '*.apk')" >> $GITHUB_ENV

      - name: Calculate SHA256
        run: |
          echo "APK_RELEASE_SHA256=$(sha256sum ${{ env.APK_RELEASE_PATH }} | awk '{print $1}')" >> $GITHUB_ENV
          echo "APK_DEBUG_SHA256=$(sha256sum ${{ env.APK_DEBUG_PATH }} | awk '{print $1}')" >> $GITHUB_ENV

      - name: Show Apks SHA256
        run: |
          echo "### Build Success" >> $GITHUB_STEP_SUMMARY
          echo "|Artifact|SHA256|" >> $GITHUB_STEP_SUMMARY
          echo "|:---:|:---|" >> $GITHUB_STEP_SUMMARY
          echo "|Release|${{ env.APK_RELEASE_SHA256 }}|" >> $GITHUB_STEP_SUMMARY
          echo "|Debug|${{ env.APK_DEBUG_SHA256 }}|" >> $GITHUB_STEP_SUMMARY

      - name: Get App Version
        id: version
        run: |
          VERSION_NAME=$(jq -r '.elements[0].versionName' app/build/outputs/apk/release/output-metadata.json)
          echo "VERSION_NAME=$VERSION_NAME"
          echo "version=$VERSION_NAME" >> "$GITHUB_OUTPUT"

      - name: Check if Tag Exists
        id: check_tag
        run: |
          TAG=${{ steps.version.outputs.version }}
          if git ls-remote --tags origin | grep -q "refs/tags/$TAG"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Extract Clean Changelog
        id: changelog
        run: |
          LOG=$(echo "${{ github.event.head_commit.message }}" | tail -n +3)
          echo "log_body<<EOF" >> $GITHUB_OUTPUT
          echo "$LOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false' && github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: SuperLyric ${{ steps.version.outputs.version }}
          body: |
            ### SuperLyric ${{ steps.version.outputs.version }}
            #### 🎉 新版本发布！

            ${{ steps.changelog.outputs.log_body }}
            
            #### 模块信息：
            - Release
            - SHA 256：${{ env.APK_RELEASE_SHA256 }}
            - Debug
            - SHA 256：${{ env.APK_DEBUG_SHA256 }}
            
            - 正常使用建议安装 Release 版本，反馈 BUG 请使用 Debug 版本！
            
            #### 交流群：
            - TG：[HChenX_Chat](https://t.me/HChenX_Chat)
            - TG：[HChen_Module](https://t.me/HChen_Module)

          draft: false
          prerelease: false
          files: ./app/build/outputs/apk/**/*.apk